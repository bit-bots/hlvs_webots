#!/bin/bash

ROBOCUP_DIR=/srv/ssd_nvm/hlvs_webots
WEBOTS_ROBOCUP_GAME=$ROBOCUP_DIR/controllers/referee/game_$1.json

if [[ ! -f $WEBOTS_ROBOCUP_GAME ]]; then
    echo "Game configuration $WEBOTS_ROBOCUP_GAME not found."
    exit 1
fi

OUT_DIR=/srv/ssd_nvm/last_game
DOCKER_IMAGE=registry.bit-bots.de/hlvs-2023

rm -rf $OUT_DIR/bot*
mkdir -p $OUT_DIR $OUT_DIR/bot_red_1 $OUT_DIR/bot_red_2 $OUT_DIR/bot_red_3 $OUT_DIR/bot_blue_1 $OUT_DIR/bot_blue_2 $OUT_DIR/bot_blue_3 $OUT_DIR/public_logs

echo Now there can be some errors which can safely be ignored
chmod -R a+w $OUT_DIR

# Delete any old containers that might still be running
docker stop bot_red_1 bot_red_2 bot_red_3 bot_blue_1 bot_blue_2 bot_blue_3
docker rm bot_red_1 bot_red_2 bot_red_3 bot_blue_1 bot_blue_2 bot_blue_3

# Kill old gamecontroller and udp bouncer
pkill -9 -f GameController
pkill -9 -f udp_bouncer.py
# Sometimes, the gamecontroller lock file is not cleaned
rm -f /tmp/GameController.app_lock
echo Now there should be no more errors

red_team_config=$(dirname $WEBOTS_ROBOCUP_GAME)/$(jq -r .red.config $WEBOTS_ROBOCUP_GAME)
blue_team_config=$(dirname $WEBOTS_ROBOCUP_GAME)/$(jq -r .blue.config $WEBOTS_ROBOCUP_GAME)

red_team_id=$(jq .red.id $WEBOTS_ROBOCUP_GAME)
blue_team_id=$(jq .blue.id $WEBOTS_ROBOCUP_GAME)

nb_red=$(jq ".players | length" $red_team_config)
nb_blue=$(jq ".players | length" $blue_team_config)

function start_team() {
    # args: color team_id nb_players team_config
    color=$1
    team_id=$2
    nb_players=$3
    team_config=$4

    BASE_DOMAIN_ID=$((40 + 10 * $team_id))
    BASE_SIMULATOR_PORT=$((10000 + 10 * $team_id))
    for i in $(seq 1 $nb_players); do
        DOMAIN_ID=$((BASE_DOMAIN_ID + $i))
        BOT_ID=$i
	DOCKER_CMD=$(jq -r ".players.\"$BOT_ID\".dockerCmd" $team_config)
	SIMULATOR_PORT=$(($BASE_SIMULATOR_PORT + $BOT_ID))
        docker run --gpus all --name bot_${color}_${BOT_ID} -d -e ROS_DOMAIN_ID=$DOMAIN_ID -e ROBOCUP_TEAM_COLOR=$color -e ROBOCUP_ROBOT_ID=${BOT_ID} -e ROBOCUP_SIMULATOR_ADDR=127.0.0.1:$SIMULATOR_PORT -e ROBOCUP_MIRROR_SERVER_IP=127.0.0.1 --net=host -v $OUT_DIR/bot_${color}_${BOT_ID}:/robocup-logs $DOCKER_IMAGE $DOCKER_CMD --team $team_id
    done
}

start_team red $red_team_id $nb_red $red_team_config
start_team blue $blue_team_id $nb_blue $blue_team_config

WEBOTS_ROBOCUP_GAME=$WEBOTS_ROBOCUP_GAME GAME_CONTROLLER_HOME=/srv/ssd_nvm/GameController JAVA_HOME=/usr webots --stdout --stderr $ROBOCUP_DIR/worlds/robocup.wbt
docker stop bot_red_1 bot_red_2 bot_blue_1 bot_blue_2
docker logs bot_red_1 &> $OUT_DIR/bot_red_1/docker.log
docker logs bot_red_2 &> $OUT_DIR/bot_red_2/docker.log
docker logs bot_blue_1 &> $OUT_DIR/bot_blue_1/docker.log
docker logs bot_blue_2 &> $OUT_DIR/bot_blue_2/docker.log
cp $ROBOCUP_DIR/controllers/referee/log.txt $OUT_DIR/referee_log.txt
chromium-browser --allow-file-access-from-files $OUT_DIR/public_logs/game.html
